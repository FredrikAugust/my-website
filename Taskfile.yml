# yaml-language-server: $schema=https://taskfile.dev/schema.json

version: "3"

tasks:
  test:unit:
    desc: Run unit tests
    cmd: gotestsum -- -coverprofile=website.out ./... -test.short

  test:
    desc: Run tests with integration tests
    deps:
      - start-db:test
    cmd: gotestsum -- -coverprofile=website.out ./...

  start-db:main:
    status:
      - docker compose ps --format json | jq -e '.Service == "postgres"'
    cmd: docker compose up -d postgres

  start-db:test:
    status:
      - docker compose ps --format json | jq -e '.Service == "postgres-test"'
    cmd: docker compose up -d postgres-test

  start:dev:
    deps:
      - start-db:main
      - build:css
    desc: Start the server
    env:
      LOG_ENV: development
    dotenv:
      - .env.local
    cmds:
      - air

  build:css:
    desc: Build CSS
    method: checksum
    sources:
      - ./views/**/*.go
      - tailwind.css
    generates:
      - static/styles/style.min.css
    cmds:
      - tailwindcss -i ./tailwind.css -o ./static/styles/style.min.css --minify

  build:css:watch:
    desc: Build CSS
    method: checksum
    sources:
      - ./views/**/*.go
      - tailwind.css
    generates:
      - static/styles/style.min.css
    cmds:
      - tailwindcss -i ./tailwind.css -o ./static/styles/style.min.css --minify --watch

  migrate:up:
    desc: Run migrations up
    dotenv:
      - .env.local
    cmd: go run cmd/migrate/main.go up

  migrate:down:
    desc: Run migrations down
    dotenv:
      - .env.local
    cmd: go run cmd/migrate/main.go down

  build:docker:
    desc: Build the Docker image
    cmd: docker build -t website .

  start:docker:
    desc: Start the server in Docker
    deps:
      - build:docker
      - start-db:main
    dotenv:
      - .env.local
    cmd: docker run -p 8080:8080 --env-file .env.local -e HOST="" -e DB_HOST=host.docker.internal website

  migrate:add:
    desc: Add a new migration. Pass name with `migrate:add -- <name>`
    cmd: migrate create -ext sql -dir storage/migrations -seq {{.CLI_ARGS}}
